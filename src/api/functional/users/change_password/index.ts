/**
 * @packageDocumentation
 * @module api.functional.users.change_password
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection, Primitive } from '@nestia/fetcher';
import { PlainFetcher } from '@nestia/fetcher/lib/PlainFetcher';

import type { ChangePassword } from '../../../dto/user/changepassword';

/**
 * @controller UsersController.changePass
 * @path POST /users/change-password/:id
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function changePass(
  connection: IConnection,
  id: string,
  body: changePass.Input,
): Promise<changePass.Output> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...(connection.headers ?? {}),
        'Content-Type': 'application/json',
      },
    },
    {
      ...changePass.METADATA,
      path: changePass.path(id),
    } as const,
    body,
  );
}
export namespace changePass {
  export type Input = Primitive<ChangePassword>;
  export type Output = Primitive<any>;

  export const METADATA = {
    method: 'POST',
    path: '/users/change-password/:id',
    request: {
      type: 'application/json',
      encrypted: false,
    },
    response: {
      type: 'application/json',
      encrypted: false,
    },
    status: null,
  } as const;

  export const path = (id: string): string => {
    return `/users/change-password/${encodeURIComponent(id ?? 'null')}`;
  };
}
