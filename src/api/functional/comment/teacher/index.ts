/**
 * @packageDocumentation
 * @module api.functional.comment.teacher
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection, Primitive } from '@nestia/fetcher';
import { PlainFetcher } from '@nestia/fetcher/lib/PlainFetcher';

import type {
  CreateTeacherComment,
  UpdateTeacherComment,
} from '../../../dto/comment/teacher-comment.dto';

/**
 * @controller CommentController.findAllTeacher
 * @path GET /comment/teacher
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function findAllTeacher(
  connection: IConnection,
): Promise<findAllTeacher.Output> {
  return PlainFetcher.fetch(connection, {
    ...findAllTeacher.METADATA,
    path: findAllTeacher.path(),
  } as const);
}
export namespace findAllTeacher {
  export type Output = Primitive<any>;

  export const METADATA = {
    method: 'GET',
    path: '/comment/teacher',
    request: null,
    response: {
      type: 'application/json',
      encrypted: false,
    },
    status: null,
  } as const;

  export const path = (): string => {
    return '/comment/teacher';
  };
}

/**
 * @controller CommentController.findOneTeacher
 * @path GET /comment/teacher/:id
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function findOneTeacher(
  connection: IConnection,
  id: string,
): Promise<findOneTeacher.Output> {
  return PlainFetcher.fetch(connection, {
    ...findOneTeacher.METADATA,
    path: findOneTeacher.path(id),
  } as const);
}
export namespace findOneTeacher {
  export type Output = Primitive<any>;

  export const METADATA = {
    method: 'GET',
    path: '/comment/teacher/:id',
    request: null,
    response: {
      type: 'application/json',
      encrypted: false,
    },
    status: null,
  } as const;

  export const path = (id: string): string => {
    return `/comment/teacher/${encodeURIComponent(id ?? 'null')}`;
  };
}

/**
 * @controller CommentController.createforteacher
 * @path POST /comment/teacher
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function createforteacher(
  connection: IConnection,
  createCommentDto: createforteacher.Input,
): Promise<createforteacher.Output> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...(connection.headers ?? {}),
        'Content-Type': 'application/json',
      },
    },
    {
      ...createforteacher.METADATA,
      path: createforteacher.path(),
    } as const,
    createCommentDto,
  );
}
export namespace createforteacher {
  export type Input = Primitive<CreateTeacherComment>;
  export type Output = Primitive<any>;

  export const METADATA = {
    method: 'POST',
    path: '/comment/teacher',
    request: {
      type: 'application/json',
      encrypted: false,
    },
    response: {
      type: 'application/json',
      encrypted: false,
    },
    status: null,
  } as const;

  export const path = (): string => {
    return '/comment/teacher';
  };
}

/**
 * @controller CommentController.updateteacher
 * @path PATCH /comment/teacher/:id
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function updateteacher(
  connection: IConnection,
  id: string,
  updateTeacherComment: updateteacher.Input,
): Promise<updateteacher.Output> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...(connection.headers ?? {}),
        'Content-Type': 'application/json',
      },
    },
    {
      ...updateteacher.METADATA,
      path: updateteacher.path(id),
    } as const,
    updateTeacherComment,
  );
}
export namespace updateteacher {
  export type Input = Primitive<UpdateTeacherComment>;
  export type Output = Primitive<any>;

  export const METADATA = {
    method: 'PATCH',
    path: '/comment/teacher/:id',
    request: {
      type: 'application/json',
      encrypted: false,
    },
    response: {
      type: 'application/json',
      encrypted: false,
    },
    status: null,
  } as const;

  export const path = (id: string): string => {
    return `/comment/teacher/${encodeURIComponent(id ?? 'null')}`;
  };
}

/**
 * @controller CommentController.removeStudent
 * @path DELETE /comment/teacher/:id
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function removeStudent(
  connection: IConnection,
  id: string,
): Promise<removeStudent.Output> {
  return PlainFetcher.fetch(connection, {
    ...removeStudent.METADATA,
    path: removeStudent.path(id),
  } as const);
}
export namespace removeStudent {
  export type Output = Primitive<any>;

  export const METADATA = {
    method: 'DELETE',
    path: '/comment/teacher/:id',
    request: null,
    response: {
      type: 'application/json',
      encrypted: false,
    },
    status: null,
  } as const;

  export const path = (id: string): string => {
    return `/comment/teacher/${encodeURIComponent(id ?? 'null')}`;
  };
}
