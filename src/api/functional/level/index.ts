/**
 * @packageDocumentation
 * @module api.functional.level
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection, Primitive } from '@nestia/fetcher';
import { PlainFetcher } from '@nestia/fetcher/lib/PlainFetcher';

import type { Level } from '../../dto/level/level.dto';

export * as all from './all';
export * as query from './query';

/**
 * @controller LevelController.getLevel
 * @path GET /level/:id
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function getLevel(
  connection: IConnection,
  id: string,
): Promise<getLevel.Output> {
  return PlainFetcher.fetch(connection, {
    ...getLevel.METADATA,
    path: getLevel.path(id),
  } as const);
}
export namespace getLevel {
  export type Output = Primitive<any>;

  export const METADATA = {
    method: 'GET',
    path: '/level/:id',
    request: null,
    response: {
      type: 'application/json',
      encrypted: false,
    },
    status: null,
  } as const;

  export const path = (id: string): string => {
    return `/level/${encodeURIComponent(id ?? 'null')}`;
  };
}

/**
 * @controller LevelController.create
 * @path POST /level
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function create(
  connection: IConnection,
  createLevel: create.Input,
): Promise<create.Output> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...(connection.headers ?? {}),
        'Content-Type': 'application/json',
      },
    },
    {
      ...create.METADATA,
      path: create.path(),
    } as const,
    createLevel,
  );
}
export namespace create {
  export type Input = Primitive<Level>;
  export type Output = Primitive<any>;

  export const METADATA = {
    method: 'POST',
    path: '/level',
    request: {
      type: 'application/json',
      encrypted: false,
    },
    response: {
      type: 'application/json',
      encrypted: false,
    },
    status: null,
  } as const;

  export const path = (): string => {
    return '/level';
  };
}

/**
 * @controller LevelController.updateLevel
 * @path PUT /level/:id
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function updateLevel(
  connection: IConnection,
  id: string,
  update: updateLevel.Input,
): Promise<updateLevel.Output> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...(connection.headers ?? {}),
        'Content-Type': 'application/json',
      },
    },
    {
      ...updateLevel.METADATA,
      path: updateLevel.path(id),
    } as const,
    update,
  );
}
export namespace updateLevel {
  export type Input = Primitive<Level>;
  export type Output = Primitive<any>;

  export const METADATA = {
    method: 'PUT',
    path: '/level/:id',
    request: {
      type: 'application/json',
      encrypted: false,
    },
    response: {
      type: 'application/json',
      encrypted: false,
    },
    status: null,
  } as const;

  export const path = (id: string): string => {
    return `/level/${encodeURIComponent(id ?? 'null')}`;
  };
}

/**
 * @controller LevelController.deleteLevel
 * @path DELETE /level/:id
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function deleteLevel(
  connection: IConnection,
  id: string,
): Promise<deleteLevel.Output> {
  return PlainFetcher.fetch(connection, {
    ...deleteLevel.METADATA,
    path: deleteLevel.path(id),
  } as const);
}
export namespace deleteLevel {
  export type Output = Primitive<any>;

  export const METADATA = {
    method: 'DELETE',
    path: '/level/:id',
    request: null,
    response: {
      type: 'application/json',
      encrypted: false,
    },
    status: null,
  } as const;

  export const path = (id: string): string => {
    return `/level/${encodeURIComponent(id ?? 'null')}`;
  };
}
