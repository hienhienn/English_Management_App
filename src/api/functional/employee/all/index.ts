/**
 * @packageDocumentation
 * @module api.functional.employee.all
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection, Primitive } from '@nestia/fetcher';
import { PlainFetcher } from '@nestia/fetcher/lib/PlainFetcher';

/**
 * @controller EmployeeController.getAllCourse
 * @path GET /employee/all
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function getAllCourse(
  connection: IConnection,
): Promise<getAllCourse.Output> {
  return PlainFetcher.fetch(connection, {
    ...getAllCourse.METADATA,
    path: getAllCourse.path(),
  } as const);
}
export namespace getAllCourse {
  export type Output = Primitive<any>;

  export const METADATA = {
    method: 'GET',
    path: '/employee/all',
    request: null,
    response: {
      type: 'application/json',
      encrypted: false,
    },
    status: null,
  } as const;

  export const path = (): string => {
    return '/employee/all';
  };
}
